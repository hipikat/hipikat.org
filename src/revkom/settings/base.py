###
# Copyright (C) 2013 Adam Wright <adam@hipikat.org>
#
# Good, reusable base settings for Django projects, dying to be extended.
###


from inspect import currentframe, getfile
import sys

from unipath import Path

from django.core.exceptions import ImproperlyConfigured

from revkom.settings import settings_path, settings_macros
from revkom.settings.utils import LoggingSettings


# Defines g and s; shortcuts to check for and set default settings.
execfile(settings_macros())


# Required, pre-defined settings.
try:
    PROJECT_NAME, ADMINS
except NameError as e:
    raise ImproperlyConfigured(
        "Settings module %s missing expected setting: %s" %
        (__name__, e.message))

###
# Metadata
###
s('TIME_ZONE', 'UTC')
s('LANGUAGE_CODE', 'en-us')
if not s('MANAGERS'):
    MANAGERS = ADMINS

###
# Diretory structure
###
# Project directory is the repository root.
s('PROJECT_DIR', Path(getfile(currentframe())).ancestor(4))
# Only fixtures, static and template directories are used internally by Django.
s('VAR_DIR', PROJECT_DIR.child('var'))              # var/
s('CONF_DIR', VAR_DIR)                              # var/
s('DB_DIR', VAR_DIR.child('db'))                    # var/db/
s('FIXTURE_DIRS', (VAR_DIR.child('fixtures'),))     # var/fixtures/
s('LOG_DIR', VAR_DIR.child('log'))                  # var/log/
s('STATIC_ROOT', VAR_DIR.child('static'))           # var/static/
s('TMP_DIR', VAR_DIR.child('tmp'))                  # var/tmp/
s('SRC_DIR', PROJECT_DIR.child('src'))              # src/
s('STATICFILES_DIRS', (SRC_DIR.child('static'),))   # src/static/
s('TEMPLATE_DIRS', (SRC_DIR.child('templates'),))   # src/templates/
sys.path.insert(0, SRC_DIR.child('apps'))           # src/apps/

###
# Security
###
# Host/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts
ALLOWED_HOSTS = list(set(list(s('ALLOWED_HOSTS', [])) + ['localhost']))

# By default we look for a secret key in var/SECRET_KEY. New secret keys
# can be generated by running `scripts/make_secret_key.py'
# https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-SECRET_KEY
if not s('SECRET_KEY'):
    if s('SECRET_KEY_FILE') and s('SECRET_KEY_FILE').exists():
        SECRET_KEY = s('SECRET_KEY_FILE').read_file()
    elif CONF_DIR.child('SECRET_KEY').exists():
        SECRET_KEY = CONF_DIR.child('SECRET_KEY').read_file()

###
# Debugging and development modes
###
s('DEBUG', False)
s('TEMPLATE_DEBUG', DEBUG)

###
# Logging
###
# http://docs.djangoproject.com/en/dev/topics/logging
LOGGING = LoggingSettings({
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}, logfile_dir=LOG_DIR)

###
# Databases
###
s('DATABASES', {'default': {'ENGINE': 'django.db.backends.sqlite3'}})

###
# Caching
###
s('CACHE_MIDDLEWARE_ANONYMOUS_ONLY', True)
s('CACHES', {'default': {
    'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'
}})

###
# URLs
###
ROOT_URLCONF = PROJECT_NAME + '.urls'
MEDIA_URL = '/media/'
STATIC_URL = '/static/'

###
# Django
###
SITE_ID = 1         # This site, in the eyes of django.contrib.sites
USE_I18N = True     # Internationalisation framework
USE_L10N = True     # Localisation framework
USE_TZ = True       # Timezone support for dates
WSGI_APPLICATION = PROJECT_NAME + '.wsgi.application'

# List of finder classes that know how to find static files.
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]
# List of callables that know how to import templates.
TEMPLATE_LOADERS = [
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
]
# https://docs.djangoproject.com/en/dev/topics/http/middleware/
MIDDLEWARE_CLASSES = [
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
INSTALLED_APPS = [
    # Main application namespace for this project
    PROJECT_NAME,
    # django-extensions: shell_plus, runserver_plus, etc.
    # http://packages.python.org/django-extensions/
    # Requires: six
    'django_extensions',
    # South: Database-agnostic migrations for Django applications.
    # http://south.readthedocs.org
    'south',
    # Django contrib packages
    # https://docs.djangoproject.com/en/dev/ref/contrib/
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.flatpages',
    'django.contrib.humanize',
    'django.contrib.messages',
    'django.contrib.sessions',
    'django.contrib.staticfiles',
    'django.contrib.sites',
]
