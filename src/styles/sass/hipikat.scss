/* Zurb Foundation's global settings file is a big-ass list of commented-out
 * defaults - set any we customise here for readability and keep the
 * settings mixin file on hand as a reference. */

@import "settings";     // Required global Foundation settings
@import "normalize";    // Use Foundation's customised normalize 

// Foundation variables
$base-font-size: 15px;
$base-line-height: $base-font-size * (1 + (3/8));
$small-font-size: $base-font-size * 0.8;
$em-base: $base-font-size;

// Grid variables
$row-width: none;
$column-gutter: emCalc(36);

// Typography variables
$h1-font-size: $base-font-size * 2;
$h2-font-size: $base-font-size * (1 + 2/3);
$h3-font-size: $base-font-size * (1 + 1/3);
$h4-font-size: $base-font-size;
$h5-font-size: $base-font-size;
$h6-font-size: $base-font-size;

@import "compass";      // Compass does most of our typographic heavy lifting.
@import "components";   // Import Foundation components

@include establish-baseline;

body {
    color: #404040;
    background-color: #f1f1f1;
    font-family: 'Roboto', sans-serif;
    font-weight: 400;
    line-height: $base-line-height;
//  @include debug-vertical-alignment;
}
//.columns { border: 1px solid orange; margin-top: -2px; }

h1 {
    @include adjust-font-size-to($h1-font-size);
    $h1-rhythm: rhythm(1, $h1-font-size);
    $h1-offset: 9/12;
    margin: (2*$h1-rhythm + $h1-rhythm * (1-$h1-offset)) 0 ($h1-rhythm * $h1-offset) 0;
    //margin: ($h1-rhythm) 0 0 0;
    //$h1-height: rhythm(3, $h1-font-size);
    //$
    //font-size: $h1-font-size;
}
h2 {
    font-size: $h2-font-size;
}
h3 {
    font-size: $h3-font-size;
}
h4 {
    font-size: $h4-font-size;
}
h5 {
    font-size: $h5-font-size;
}
h6 {
    font-size: $h6-font-size;
}
p {
    margin: 0;
    @include margin-trailer(1);
}

$first-breakpoint: 340px;
$prev-breakpoint: $first-breakpoint;
$body-padding: 0px;
$max-breakpoint: 3072px;
@while $prev-breakpoint < $small-screen {
    @media only screen and (min-width: $prev-breakpoint + 1) {
        body { padding: 0 $body-padding; }
    }
    $addition: $prev-breakpoint / 4;
    $prev-breakpoint: $prev-breakpoint + floor($addition);
    $body-padding: floor(($prev-breakpoint - $first-breakpoint) / 2) * (($prev-breakpoint/1.666666) / ($max-breakpoint));
}
$body-padding: 0;
$prev-breakpoint: $small-screen - 1;
@while $prev-breakpoint < $max-breakpoint {
    @media only screen and (min-width: $prev-breakpoint + 1) {
        body { padding: 0 $body-padding; }
    }
    $addition: $prev-breakpoint / 4;
    $prev-breakpoint: $prev-breakpoint + floor($addition);
    $body-padding: floor(($prev-breakpoint - $small-screen) / 2) * (($prev-breakpoint) / ($max-breakpoint));
}

.header .site-title {
    h1, p {
        display: inline;
        font-weight: 300;
        @media #{$small} {
            display: block;
        }
    }
    h1 {
        font-size: $h3-font-size;
        line-height: $h3-font-size;
        margin: 0;
    }
    @media #{$small} {
        text-align: right;
    }
}

.blog-summary {
    h1 {
        padding-right: 0.5em;
    }
    .meta {
        p {
            display: inline;
            $meta-p-rhythm: rhythm(1, $small-font-size);
            $meta-p-offset: 11/12;
            @include adjust-font-size-to($small-font-size);
            margin: 0;
            //padding: ($meta-p-rhythm * (1-$meta-p-offset)) 0 ($meta-p-rhythm * $meta-p-offset) 0;
        }
    }
    @media #{$small} {
        .meta {
            @include margin-leader(3);
            text-align: right;
            p {
                display: block;
            }
            .bullet {
                display: none;
            }
        }
    }

}

